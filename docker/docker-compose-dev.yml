# 개발 환경용 Compose 파일
services:
  app:
    image: unijuni/artium:latest
    container_name: artium-app-dev
    expose:
      - "8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE:-dev}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
    command: ["java", "-jar", "app.jar"]
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - artium-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: artium-mysql
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - artium-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.2-alpine
    container_name: artium-redis
    expose:
      - "6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASS}
    command: ["redis-server", "--requirepass", "${REDIS_PASS}"]
    volumes:
      - redis-data:/data
    networks:
      - artium-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASS}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  dozzle:
    image: amir20/dozzle:latest
    container_name: artium-dozzle
    ports:
      - "9999:8080"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - artium-network
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.12.3
    container_name: artium-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - artium-network
    restart: unless-stopped
